#expectes a temp variable country_to_initiate which should contain original_tag to instantiate as a collabration government
SGS_effect_civil_war_begin = {
    custom_effect_tooltip = SGS_civil_war_begin_ins
    hidden_effect = {
    }
}

#鹰鸽派机制
SGS_init_hawk_dove_value = {
    set_variable = {sgs_hawk_infl = 50}
    set_variable = {sgs_dove_infl = 50}
}
SGS_hawk_dove_buff_add = {
    add_political_power = 100
    remove_ideas = SGS_dove_60_idea
    remove_ideas = SGS_dove_70_idea
    remove_ideas = SGS_dove_80_idea
    remove_ideas = SGS_dove_90_idea
    remove_ideas = SGS_dove_100_idea
    remove_ideas = SGS_hawk_60_idea
    remove_ideas = SGS_hawk_70_idea
    remove_ideas = SGS_hawk_80_idea
    remove_ideas = SGS_hawk_90_idea
    remove_ideas = SGS_hawk_100_idea
    if = {
        limit = {
            check_variable = {sgs_dove_infl > 59}
            check_variable = {sgs_dove_infl < 70}
        }
        add_ideas =  SGS_dove_60_idea
    }
    if = {
        limit = {
            check_variable = {sgs_dove_infl > 69}
            check_variable = {sgs_dove_infl < 80}
        }
        add_ideas =  SGS_dove_70_idea
    }
    if = {
        limit = {
            check_variable = {sgs_dove_infl > 79}
            check_variable = {sgs_dove_infl < 90}
        }
        add_ideas =  SGS_dove_80_idea
    }
    if = {
        limit = {
            check_variable = {sgs_dove_infl > 89}
            check_variable = {sgs_dove_infl < 100}
        }
        add_ideas =  SGS_dove_90_idea
    }
    if = {
        limit = {
            check_variable = {sgs_dove_infl > 99}
        }
        add_ideas =  SGS_dove_100_idea
    }
    if = {
        limit = {
            check_variable = {sgs_hawk_infl > 59}
            check_variable = {sgs_hawk_infl < 70}
        }
        add_ideas =  SGS_hawk_60_idea
    }
    if = {
        limit = {
            check_variable = {sgs_hawk_infl > 69}
            check_variable = {sgs_hawk_infl < 80}
        }
        add_ideas =  SGS_hawk_70_idea
    }
    if = {
        limit = {
            check_variable = {sgs_hawk_infl > 79}
            check_variable = {sgs_hawk_infl < 90}
        }
        add_ideas =  SGS_hawk_80_idea
    }
    if = {
        limit = {
            check_variable = {sgs_hawk_infl > 89}
            check_variable = {sgs_hawk_infl < 100}
        }
        add_ideas =  SGS_hawk_90_idea
    }
    if = {
        limit = {
            check_variable = {sgs_hawk_infl > 99}
        }
        add_ideas =  SGS_hawk_100_idea
    }

}

SGS_deal_after_hawk_cal = {
    clamp_variable = {
        var = sgs_hawk_infl
        min = 0
        max = 100
    }
    set_temp_variable = { temp1 = 100 }
    subtract_from_temp_variable = { temp1 = sgs_hawk_infl }
    set_variable = { sgs_dove_infl = temp1 }
    hidden_effect = {
        SGS_hawk_dove_buff_add = yes
    }
}
SGS_deal_after_dove_cal = {
    clamp_variable = {
        var = sgs_dove_infl
        min = 0
        max = 100
    }
    set_temp_variable = { temp1 = 100 }
    subtract_from_temp_variable = { temp1 = sgs_dove_infl }
    set_variable = { sgs_hawk_infl = temp1 }
    hidden_effect = {
        SGS_hawk_dove_buff_add = yes
    }
}
SGS_hawk_reduce5 = {
    custom_effect_tooltip = SGS_hawk_reduce5_tooltip
    add_to_variable = { sgs_hawk_infl = -5}
    SGS_deal_after_hawk_cal = yes
}
SGS_hawk_rise5 = {
    custom_effect_tooltip = SGS_hawk_rise5_tooltip
    add_to_variable = { sgs_hawk_infl = 5}
    SGS_deal_after_hawk_cal = yes
}
SGS_hawk_rise10 = {
    custom_effect_tooltip = SGS_hawk_rise10_tooltip
    add_to_variable = { sgs_hawk_infl = 10}
    SGS_deal_after_hawk_cal = yes
}
SGS_hawk_rise20 = {
    custom_effect_tooltip = SGS_hawk_rise20_tooltip
    add_to_variable = { sgs_hawk_infl = 20}
    SGS_deal_after_hawk_cal = yes
}
SGS_dove_reduce5 = {
    custom_effect_tooltip = SGS_dove_reduce5_tooltip
    add_to_variable = { sgs_dove_infl = -5}
    SGS_deal_after_dove_cal = yes
}
SGS_dove_rise5 = {
    custom_effect_tooltip = SGS_dove_rise5_tooltip
    add_to_variable = { sgs_dove_infl = 5}
    SGS_deal_after_dove_cal = yes
}
SGS_dove_rise10 = {
    custom_effect_tooltip = SGS_dove_rise10_tooltip
    add_to_variable = { sgs_dove_infl = 10}
    SGS_deal_after_dove_cal = yes
}
SGS_dove_rise20 = {
    custom_effect_tooltip = SGS_dove_rise20_tooltip
    add_to_variable = { sgs_dove_infl = 20}
    SGS_deal_after_dove_cal = yes
}
SGS_BLM_cal_prompt_repo = {
    if = {
        limit = {
            has_country_flag = SGS_BLM_pay_prompt_repo_2_flag
        }
        multiply_variable = {global.sgs_equip_num = 1.1}
        else_if = {
            limit = {
                has_country_flag = SGS_BLM_pay_prompt_repo_1_flag
            }
            multiply_variable = {global.sgs_equip_num = 1.05}
        }
    }
    round_variable = global.sgs_equip_num
}

SGS_calculate_black_market_repo_kappa = {
    every_country = {
        limit = {
            has_idea = Kappa
        }
        
        add_to_variable = {global.sgs_equip_num = num_equipment@var:global.sgs_equip_type }
    }
    multiply_variable = {global.sgs_equip_num = 0.2}
    SGS_BLM_cal_prompt_repo = yes
}
SGS_calculate_black_market_repo_fairy = {
    every_neighbor_country = {
               
        add_to_variable = {global.sgs_equip_num = num_equipment@var:global.sgs_equip_type }
    }
    multiply_variable = {global.sgs_equip_num = 0.1}
    SGS_BLM_cal_prompt_repo = yes
}

SGS_calculate_black_market_repo_human = {
    every_neighbor_country = {
        limit = {
            has_idea = Human
        }    
        add_to_variable = {global.sgs_equip_num = num_equipment@var:global.sgs_equip_type }
    }
    multiply_variable = {global.sgs_equip_num = 0.5}
    SGS_BLM_cal_prompt_repo = yes
}

SGS_calculate_black_market_repo = {
    if = {
        limit = {
            check_variable = {sgs_current_black_marketer = 1} #河童
        }
        #gun
        set_variable = {global.sgs_equip_num = 1575} #315*5
        set_variable = { global.sgs_equip_type = token:gun_a }
        SGS_calculate_black_market_repo_kappa = yes
        set_variable = {sgs_black_market_repo_gun = global.sgs_equip_num}
        #sc 
        set_variable = {global.sgs_equip_num = 1800} #360*5
        set_variable = { global.sgs_equip_type = token:magic_core_a }
        SGS_calculate_black_market_repo_kappa = yes
        set_variable = {sgs_black_market_repo_SC = global.sgs_equip_num}
        #melee 
        set_variable = {global.sgs_equip_num = 3600} #720*5
        set_variable = { global.sgs_equip_type = token:melee_a }
        SGS_calculate_black_market_repo_kappa = yes
        set_variable = {sgs_black_market_repo_knife = global.sgs_equip_num}
        #support
        set_variable = {global.sgs_equip_num = 180} #36*5
        set_variable = { global.sgs_equip_type = token:support_equipment }
        SGS_calculate_black_market_repo_kappa = yes
        set_variable = {sgs_black_market_repo_support = global.sgs_equip_num}
        #shield
        set_variable = {global.sgs_equip_num = 1125} #225*5
        set_variable = { global.sgs_equip_type = token:shield_a }
        SGS_calculate_black_market_repo_kappa = yes
        set_variable = {sgs_black_market_repo_shield = global.sgs_equip_num}
        #motar
        set_variable = {global.sgs_equip_num = 180} #36*5
        set_variable = { global.sgs_equip_type = token:mortar_a }
        SGS_calculate_black_market_repo_kappa = yes
        set_variable = {sgs_black_market_repo_motar = global.sgs_equip_num}
        
        else_if = {
            limit = {
                check_variable = {sgs_current_black_marketer = 2} #妖精
            }
            #gun
            set_variable = {global.sgs_equip_num = 0} #
            set_variable = { global.sgs_equip_type = token:gun_a }
            SGS_calculate_black_market_repo_fairy = yes
            set_variable = {sgs_black_market_repo_gun = global.sgs_equip_num}
            #sc 
            set_variable = {global.sgs_equip_num = 0} #
            set_variable = { global.sgs_equip_type = token:magic_core_a }
            SGS_calculate_black_market_repo_fairy = yes
            set_variable = {sgs_black_market_repo_SC = global.sgs_equip_num}
            #melee
            set_variable = {global.sgs_equip_num = 0} #
            set_variable = { global.sgs_equip_type = token:melee_a }
            SGS_calculate_black_market_repo_fairy = yes
            set_variable = {sgs_black_market_repo_knife = global.sgs_equip_num}
            #support
            set_variable = {global.sgs_equip_num = 0} #
            set_variable = { global.sgs_equip_type = token:support_equipment }
            SGS_calculate_black_market_repo_fairy = yes
            set_variable = {sgs_black_market_repo_support = global.sgs_equip_num}
            #shield
            set_variable = {global.sgs_equip_num = 0} #
            set_variable = { global.sgs_equip_type = token:shield_a }
            SGS_calculate_black_market_repo_fairy = yes
            set_variable = {sgs_black_market_repo_shield = global.sgs_equip_num}
            #motar
            set_variable = {global.sgs_equip_num = 0} #
            set_variable = { global.sgs_equip_type = token:mortar_a }
            SGS_calculate_black_market_repo_fairy = yes
            set_variable = {sgs_black_market_repo_motar = global.sgs_equip_num}
        }
        else = { #人类
            
            #gun
            set_variable = {global.sgs_equip_num = 350} #
            set_variable = { global.sgs_equip_type = token:gun_a }
            SGS_calculate_black_market_repo_human = yes
            set_variable = {sgs_black_market_repo_gun = global.sgs_equip_num}
            #sc 
            set_variable = {global.sgs_equip_num = 400} #
            set_variable = { global.sgs_equip_type = token:magic_core_a }
            SGS_calculate_black_market_repo_human = yes
            set_variable = {sgs_black_market_repo_SC = global.sgs_equip_num}
            #melee
            set_variable = {global.sgs_equip_num = 800} #
            set_variable = { global.sgs_equip_type = token:melee_a }
            SGS_calculate_black_market_repo_human = yes
            set_variable = {sgs_black_market_repo_knife = global.sgs_equip_num}
            #support
            set_variable = {global.sgs_equip_num = 40} #
            set_variable = { global.sgs_equip_type = token:support_equipment }
            SGS_calculate_black_market_repo_human = yes
            set_variable = {sgs_black_market_repo_support = global.sgs_equip_num}
            #shield
            set_variable = {global.sgs_equip_num = 250} #
            set_variable = { global.sgs_equip_type = token:shield_a }
            SGS_calculate_black_market_repo_human = yes
            set_variable = {sgs_black_market_repo_shield = global.sgs_equip_num}
            #motar
            set_variable = {global.sgs_equip_num = 40} #
            set_variable = { global.sgs_equip_type = token:mortar_a }
            SGS_calculate_black_market_repo_human = yes
            set_variable = {sgs_black_market_repo_motar = global.sgs_equip_num}
        }
    }
}
SGS_buying_behaviour_BLM = {
    round_variable = global.sgs_equip_num_temp
    send_equipment = {
        equipment = var:global.sgs_black_market_buying_type
        amount = var:global.sgs_equip_num_temp
        target = SGS
    }
    add_to_variable = {global.sgs_equip_total_temp = global.sgs_equip_num_temp }
}
SGS_buying_from_black_market_repo_kappa = {
    every_country = {
        limit = {
            has_idea = Kappa
            check_variable = { global.sgs_equip_total_temp < global.sgs_black_market_buying_num }
            has_equipment = {
                var:global.sgs_black_market_buying_type > global.sgs_equip_num_temp
            }
        }
        SGS_buying_behaviour_BLM = yes
    }
    SGS_BLM_cal_remain = yes
}
SGS_buying_from_black_market_repo_fairy = {
    every_neighbor_country = {
        limit = {
            check_variable = {global.sgs_equip_total_temp < global.sgs_black_market_buying_num}
            has_equipment = {
                var:global.sgs_black_market_buying_type > global.sgs_equip_num_temp
            }
           # check_variable = { num_equipment@ > global.sgs_equip_num_temp}
        }
        SGS_buying_behaviour_BLM = yes
    }
    SGS_BLM_cal_remain = yes
}

SGS_buying_from_black_market_repo_human = {
    every_neighbor_country = {
        limit = {
            has_idea = Human
            check_variable = {global.sgs_equip_total_temp < global.sgs_black_market_buying_num }
            has_equipment = {
                var:global.sgs_black_market_buying_type > global.sgs_equip_num_temp
            }
        }
        SGS_buying_behaviour_BLM = yes
    }
    SGS_BLM_cal_remain = yes
}

SGS_BLM_cal_remain = {
    set_variable = {global.sgs_remain = global.sgs_black_market_buying_num }
    subtract_from_variable = {global.sgs_remain = global.sgs_equip_total_temp }
    if = {
        limit = {
            check_variable = {global.sgs_remain > 0}
        }
        add_equipment_to_stockpile = {
            type = var:global.sgs_black_market_buying_type
            amount = var:global.sgs_remain
            producer = var:sgs_black_marketer_tag
        }
    }
}

SGS_BLM_cal_remain_for_fake = {
    if = {
        limit = {
            check_variable = {sgs_current_black_marketer = 1} #河童	
        }
        every_country = {
            limit = {
                has_idea = Kappa
                check_variable = { global.sgs_equip_total_temp < global.sgs_black_market_buying_num }
                has_equipment = {
                    var:global.sgs_black_market_buying_type > global.sgs_equip_num_temp
                }  
            }
            add_to_variable = {global.sgs_equip_total_temp = global.sgs_equip_num_temp }
        }


        else_if = {
            limit = {
                check_variable = {sgs_current_black_marketer = 2}
            }
            every_neighbor_country = {
                limit = {
                    check_variable = {global.sgs_equip_total_temp < global.sgs_black_market_buying_num}
                    has_equipment = {
                        var:global.sgs_black_market_buying_type > global.sgs_equip_num_temp
                    }
                   # check_variable = { num_equipment@ > global.sgs_equip_num_temp}
                }
                add_to_variable = {global.sgs_equip_total_temp = global.sgs_equip_num_temp }
            }
        }


        else = {# 人类
            every_neighbor_country = {
                limit = {
                    has_idea = Human
                    check_variable = {global.sgs_equip_total_temp < global.sgs_black_market_buying_num }
                    has_equipment = {
                        var:global.sgs_black_market_buying_type > global.sgs_equip_num_temp
                    }
                }
                add_to_variable = {global.sgs_equip_total_temp = global.sgs_equip_num_temp }
            }
        }
    }

    set_variable = {global.sgs_remain = global.sgs_black_market_buying_num }
    subtract_from_variable = {global.sgs_remain = global.sgs_equip_total_temp }
}

SGS_init_BML_deci = {
    set_country_flag = sgs_black_market_repo_preparing_flag
    clr_country_flag =  sgs_BLM_failed
    activate_decision = SGS_fire_black_market_doing_deci 
	set_variable = { global.sgs_equip_num_temp = global.sgs_black_market_buying_num }
	if = {
		limit = {
			check_variable = { sgs_current_black_marketer = 3 }
		}
		multiply_variable = {global.sgs_equip_num_temp = 0.3}
		else = {
			multiply_variable = {global.sgs_equip_num_temp = 0.1}
		}
	}
	round_variable = global.sgs_equip_num_temp
	set_variable = {global.sgs_equip_total_temp = 0}
    set_country_flag = {
		flag = sgs_black_market_proctect_cd
		days = 10
        value = 1
	}
    
}
SGS_clear_all_BLM_decis = {
    remove_decision = SGS_fire_black_marketer_buy_gun_small
    remove_decision = SGS_fire_black_marketer_buy_magic_core_small
    remove_decision = SGS_fire_black_marketer_buy_melee_small
    remove_decision = SGS_fire_black_marketer_buy_support_small
    remove_decision = SGS_fire_black_marketer_buy_shield_small
    remove_decision = SGS_fire_black_marketer_buy_artillery_small
    remove_decision = SGS_fire_black_marketer_buy_gun
    remove_decision = SGS_fire_black_marketer_buy_magic_core
    remove_decision = SGS_fire_black_marketer_buy_melee
    remove_decision = SGS_fire_black_marketer_buy_support
    remove_decision = SGS_fire_black_marketer_buy_shield
    remove_decision = SGS_fire_black_marketer_buy_artillery
    remove_decision = SGS_fire_black_marketer_buy_gun_small_human
    remove_decision = SGS_fire_black_marketer_buy_magic_core_small_human
    remove_decision = SGS_fire_black_marketer_buy_melee_small_human
    remove_decision = SGS_fire_black_marketer_buy_support_small_human
    remove_decision = SGS_fire_black_marketer_buy_shield_small_human
    remove_decision = SGS_fire_black_marketer_buy_artillery_small_human
    remove_decision = SGS_fire_black_marketer_buy_gun_human
    remove_decision = SGS_fire_black_marketer_buy_magic_core_human
    remove_decision = SGS_fire_black_marketer_buy_melee_human
    remove_decision = SGS_fire_black_marketer_buy_support_human
    remove_decision = SGS_fire_black_marketer_buy_shield_human
    remove_decision = SGS_fire_black_marketer_buy_artillery_human
    # remove_decision = SGS_fire_black_market_doing_deci
}

SGS_BLM_get_random_garbages = {
    
    randomize_variable = {
        var = num_dogs
        distribution = binomial
        min = 0
        max = 100
    }
    add_to_variable = {sgs_get_garbage_this_time = num_dogs}
}

SGS_BLM_event_304x = {
    
		set_variable = {global.sgs_equip_total_temp = 0 }
		if = {
			limit = {
				check_variable = {sgs_current_black_marketer = 1} #河童	
			}
			SGS_buying_from_black_market_repo_kappa = yes
			else_if = {
				limit = {
					check_variable = {sgs_current_black_marketer = 2}
				}
				SGS_buying_from_black_market_repo_fairy = yes
			}
			else = {# 人类
				SGS_buying_from_black_market_repo_human = yes
			}
		}
		clr_country_flag = sgs_black_market_repo_preparing_flag
}

SGS_RT_assign = {
    if = {
        limit = {
            SGS_reseach_team_one_idle = yes
        }
        SGS_RT_one_assign = yes
        else_if = {
            limit = {
                SGS_reseach_team_two_idle = yes
            }
            SGS_RT_two_assign = yes
        }
        else = {
            SGS_RT_three_assign = yes
        }
    }
}

SGS_RT_one_assign = {
    set_variable = {SGS_research_team_one = global.sgs_RT_tech_token }
    set_variable = {sgs_RT_tech_current_value_one = 0}
	set_variable = {sgs_RT_tech_total_value_one = global.sgs_RT_tech_total_value}
    SGS_RT_one_days_cal = yes
    
}
SGS_RT_two_assign = {
    set_variable = {SGS_research_team_two = global.sgs_RT_tech_token}
    set_variable = {sgs_RT_tech_current_value_two = 0}
	set_variable = {sgs_RT_tech_total_value_two = global.sgs_RT_tech_total_value}
}
SGS_RT_three_assign = {
    set_variable = {SGS_research_team_three = global.sgs_RT_tech_token}
    set_variable = {sgs_RT_tech_current_value_three = 0}
	set_variable = {sgs_RT_tech_total_value_three = global.sgs_RT_tech_total_value}
}

SGS_RT_one_days_cal = {
    set_variable = {sgs_RT_tech_days_one = sgs_RT_tech_total_value_one}
    subtract_from_variable  = {sgs_RT_tech_days_one = sgs_RT_tech_current_value_one}
    divide_variable = { sgs_RT_tech_days_one = SGS.SGS_research_team_speed }
    round_variable = sgs_RT_tech_days_one
    if = {
        limit = {
            check_variable = {sgs_RT_tech_days_one < 1}
        }
        country_event = {id = sgs.3044}
    }
}
SGS_RT_two_days_cal = {
    set_variable = {sgs_RT_tech_days_two = sgs_RT_tech_total_value_two}
    subtract_from_variable  = {sgs_RT_tech_days_two = sgs_RT_tech_current_value_two}
    divide_variable = { sgs_RT_tech_days_two = SGS.SGS_research_team_speed }
    round_variable = sgs_RT_tech_days_two
    if = {
        limit = {
            check_variable = {sgs_RT_tech_days_two < 1}
        }
        country_event = {id = sgs.30440}
    }
}
SGS_RT_three_days_cal = {
    set_variable = {sgs_RT_tech_days_three = sgs_RT_tech_total_value_three}
    subtract_from_variable  = {sgs_RT_tech_days_three = sgs_RT_tech_current_value_three}
    divide_variable = { sgs_RT_tech_days_three = SGS.SGS_research_team_speed }
    round_variable = sgs_RT_tech_days_three
    if = {
        limit = {
            check_variable = {sgs_RT_tech_days_three < 1}
        }
        country_event = {id = sgs.30441}
    }
}

SGS_RT_update_research_speed = {
    set_variable = {SGS.SGS_research_team_speed = 5}

    if = {
        limit = {
            has_country_flag = SGS_RT_reseacher_better_life
        }
        multiply_variable = {SGS_research_team_speed = 1.25}
    }
    if = {
        limit = {
            has_country_flag = SGS_RT_reseacher_better_political_statue
        }
        multiply_variable = {SGS_research_team_speed = 1.5}
    }
    if = {
        limit = {
            has_country_flag = SGS_RT_reseacher_overtime
        }
        multiply_variable = {SGS_research_team_speed = 1.8}
    }
    if = {
        limit = {
            has_country_flag = SGS_RT_reseach_concentrate
            has_variable = SGS_research_team_two
            not = {has_variable = SGS_research_team_three}
        }
        multiply_variable = {SGS_research_team_speed = 1.7}
    }
    if = {
        limit = {
            has_country_flag = SGS_RT_reseach_concentrate
            has_variable = SGS_research_team_three
        }
        multiply_variable = {SGS_research_team_speed = 2.5}
    }

}

SGS_RT_open_overtime = {
    set_country_flag = SGS_RT_reseacher_overtime
    SGS_RT_update_research_speed = yes
}

SGS_RT_close_overtime = {
    clr_country_flag = SGS_RT_reseacher_overtime
    SGS_RT_update_research_speed = yes
    clr_country_flag = SGS_RT_one_resercher_down
}

SGS_RT_open_concentrate = {
    set_country_flag = SGS_RT_reseach_concentrate
    if = {
        limit = {
            SGS_reseach_team_one_ongoing = yes
        }
        set_country_flag = SGS_RT_team_two_stop
        set_country_flag = SGS_RT_team_three_stop
        else_if = {
            limit = {
                SGS_reseach_team_two_ongoing = yes
            }
            set_country_flag = SGS_RT_team_one_stop
            set_country_flag = SGS_RT_team_three_stop
        }
        else = {
            set_country_flag = SGS_RT_team_one_stop
            set_country_flag = SGS_RT_team_two_stop
        }
    }
    SGS_RT_update_research_speed = yes
}

SGS_RT_close_concentrate = {
    clr_country_flag = SGS_RT_reseach_concentrate
    clr_country_flag = SGS_RT_team_one_stop
    clr_country_flag = SGS_RT_team_two_stop
    clr_country_flag = SGS_RT_team_three_stop #集中攻坚时猝死的话得另处理
    SGS_RT_update_research_speed = yes
}


SGS_RT_daily_cal = {
    if = {
        limit = {
            SGS_reseach_team_one_ongoing = yes
            not = { has_country_flag = SGS_RT_team_one_stop }
        }
        add_to_variable = {sgs_RT_tech_current_value_one = SGS.SGS_research_team_speed}
        SGS_RT_one_days_cal = yes
    }
    if = {
        limit = {
            SGS_reseach_team_two_ongoing = yes
            not = { has_country_flag = SGS_RT_team_two_stop }
        }
        add_to_variable = {sgs_RT_tech_current_value_two = SGS.SGS_research_team_speed}
        SGS_RT_two_days_cal = yes
    }
    if = {
        limit = {
            SGS_reseach_team_three_ongoing = yes
            not = { has_country_flag = SGS_RT_team_three_stop }
        }
        add_to_variable = {sgs_RT_tech_current_value_three = SGS.SGS_research_team_speed}
        SGS_RT_three_days_cal = yes
    }

}

SGS_RT_reduce_progress = {
    if = {
        limit = {
            check_variable = {sgs_rt_changing_team_num = 1}
        }
        subtract_from_variable = {sgs_RT_tech_current_value_one = sgs_rt_reduce_progress_var}
        clamp_variable = {
            var = sgs_RT_tech_current_value_one
            min = 0
            max = 10000
        }
        else_if = {
            limit = {
                check_variable = {sgs_rt_changing_team_num = 2}
            }
            subtract_from_variable = {sgs_RT_tech_current_value_two = sgs_rt_reduce_progress_var}
            clamp_variable = {
                var = sgs_RT_tech_current_value_two
                min = 0
                max = 10000
            }
        }
        else = {
            subtract_from_variable = {sgs_RT_tech_current_value_three = sgs_rt_reduce_progress_var}
            clamp_variable = {
                var = sgs_RT_tech_current_value_three
                min = 0
                max = 10000
            }
        }
    }
}

SGS_find_available_team = {
    if = {
        limit = {
            SGS_reseach_team_one_ongoing = yes
        }
        set_variable = {sgs_rt_changing_team_num = 1}
        else_if = {
            limit = {
                SGS_reseach_team_two_ongoing = yes
            }
            set_variable = {sgs_rt_changing_team_num = 2}
        }
        else = {
            set_variable = {sgs_rt_changing_team_num = 3}
        }
    }
}